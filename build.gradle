/*
 * (c) Copyright 2015 Hewlett Packard Enterprise Development LP Licensed under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at
 * http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
 * either express or implied. See the License for the specific language governing permissions and limitations under the
 * License.
 */

buildscript {
    repositories {
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath "org.ajoberstar:grgit:1.3.0",
                "org.ajoberstar:gradle-git:1.2.0"

    }
}

plugins {
    id "com.jfrog.bintray" version "1.4"
}

apply plugin: 'java'
apply plugin: 'org.ajoberstar.github-pages'
apply plugin: 'maven-publish'

repositories {
    jcenter()
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.13'
}

dependencies {
    compile("org.mitre.taxii:taxii:1.1.0") {
        exclude group: "net.sf.saxon"
    }
    compile "org.springframework:spring-web:4.2.5.RELEASE"
    compile "org.springframework:spring-oxm:4.2.5.RELEASE"
    compile "org.apache.httpcomponents:httpclient:4.5.2"
    compile "commons-io:commons-io:2.5"
    compile "com.fasterxml.jackson.core:jackson-annotations:2.7.4"

    testCompile "junit:junit:4.12"
    testCompile "org.easytesting:fest-assert:1.4"
    testCompile "com.fasterxml.jackson.core:jackson-databind:2.7.4"
}

version = 0.10

test {
    systemProperties = [
            'http.proxyHost' : System.getProperty("http.proxyHost"),
            'https.proxyHost': System.getProperty("https.proxyHost"),
            'http.proxyPort' : System.getProperty("http.proxyPort", "0"),
            'https.proxyPort': System.getProperty("https.proxyPort", "0")
    ]
}

ext {
    ESC = "${(char) 27}"
    CYAN = "${ESC}[36m"
    GREEN = "${ESC}[32m"
    YELLOW = "${ESC}[33m"
    RED = "${ESC}[31m"
    NORMAL = "${ESC}[0m"
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

assemble.dependsOn "sourcesJar", "javadocJar"

import org.ajoberstar.grgit.Grgit

jar {
    doFirst {
        println "${CYAN}* jar:$NORMAL generating git.properties"
        ant.mkdir(dir: "$buildDir/resources/main")
        File f = new File("$buildDir/resources/main/git.properties")

        if (f.exists()) {
            ant.delete(file: f)
        }

        def grgit = Grgit.open()
        def lastCommit = grgit.log(maxCommits: 1)[0]

        f << """# this file is generated during the build
git.commit.id=$lastCommit.id
git.commit.time=${new Date(new Integer(lastCommit.time).longValue() * 1000)}
git.branch=$grgit.branch.current.name${grgit.status().clean ? '' : ' (with local changes)'}
"""

        println f.text
    }

    manifest {
        attributes("Implementation-Title": "spring-TAXII-contrib (elderberry)",
                "Implementation-version": version)
    }

    from "$buildDir/resources/main/git.properties"
}

githubPages {
    repoUri = "https://github.com/amirkibbar/elderberry.git"
    pages {
        from javadoc
    }
}

publishing {
    publications {
        maven(MavenPublication) {
            groupId 'com.hpe.elderberry'
            artifactId 'elderberry'
            version project.version

            pom.withXml {
                asNode().children().last() + {
                    resolveStrategy = Closure.DELEGATE_FIRST
                    name 'elderberry'
                    inceptionYear "2015"
                    url "https://github.com/amirkibbar/elderberry"
                    licenses {
                        license {
                            name 'The Apache Software License, Version 2.0'
                            url 'http://www.apache.org/license/LICENSE-2.0.txt'
                            distribution 'repo'
                        }
                    }
                }
            }

            from components.java

            artifact sourcesJar {
                classifier "sources"
            }

            artifact javadocJar {
                classifier "javadoc"
            }
        }
    }
}

model {
    tasks.generatePomFileForMavenPublication {
        destination = file("$buildDir/libs/elderberry-${project.version}.pom")
    }
}

task install(dependsOn: 'publishMavenPublicationToMavenLocal') << {
    logger.info "installing $project.name"
}

bintray {
    user = System.getenv("BINTRAY_USER")
    key = System.getenv("BINTRAY_KEY")

    publications = ['maven']

    publish = true

    pkg {
        repo = 'maven'
        name = 'spring-taxii'
        userOrg = 'threatcentral'
        websiteUrl = 'https://github.com/ThreatCentral/elderberry'
        issueTrackerUrl = 'https://github.com/ThreatCentral/elderberry/issues'
        vcsUrl = 'https://github.com/ThreatCentral/elderberry.git'
        licenses = ['Apache-2.0']
        labels = ['spring-taxii']
        version {
            name = project.version
        }
    }
}

bintrayUpload.dependsOn = [sourcesJar, javadocJar]

task publishAll(dependsOn: [ bintrayUpload, publishGhPages]) << {}